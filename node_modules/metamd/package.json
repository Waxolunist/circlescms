{
  "name": "metamd",
  "description": "Parse out meta data from your markdown content",
  "version": "0.3.0",
  "author": {
    "name": "Chris Jaure",
    "url": "http://cleverchris.com"
  },
  "main": "./src",
  "scripts": {
    "test": "mocha --reporter spec",
    "compile": "./support/compile.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisjaure/metamd.git"
  },
  "homepage": "https://github.com/chrisjaure/metamd",
  "bugs": {
    "url": "https://github.com/chrisjaure/metamd/issues"
  },
  "keywords": [
    "markdown",
    "meta",
    "parse"
  ],
  "tags": [
    "markdown",
    "meta",
    "parse"
  ],
  "license": "MIT",
  "dependencies": {
    "marked": "0.2.x"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "browserify": "1.3.x",
    "loadify": "0.1.x",
    "uglify-js": "1.3.x"
  },
  "readme": "metamd\n======\n\nParse meta Markdown data and render in the browser or server. Transform this:\n\n```markdown\nOptional Heading\n================\ntitle: page1.md\ntags: test\n\nThe two newlines preceding this paragraph are important.\n```\n\ninto this:\n\n```javascript\n{ title: 'page1.md',\n  tags: 'test',\n  body: '<h1>Optional Heading</h1><p>The two newlines preceding this paragraph are important.</p>' }\n```\n\n\nInstallation\n------------\n\n### Node ###\n\t\n\tnpm install metamd\n\n### Client ###\n\n\t<script type=\"text/javascript\" src=\"metamd.client.min.js\"></script>\n\n\nExample\n-------\n\n```javascript\nvar fs = require('fs');\nvar metamd = require('metamd');\n\nvar parsed = metamd(fs.readFileSync('./example/page1.md', 'utf-8'));\nconsole.log(parsed.getData());\nconsole.log(parsed.getHtml());\n```\n\nWill result in:\n```javascript\n> { title: 'page1.md',\n    tags: 'test',\n    body: 'Page 1\\n=\\n\\nThis is a _test_.\\n\\n```\\nThis is another test\\n```' }\n\n> <h1>Page 1\n  </h1>\n  <p>This is a <em>test</em>.\n\n  </p>\n  <pre><code>This is another test</code></pre>\n\n```\n\n\nUsage\n-----\n\n### `metamd(<markdown>)` ###\n\nReturns an instance of `Metamd`.\n\n### `Metamd.getData([key])` ###\n\nReturns an object containing the meta data. If `key` is provided, just that value will be returned.\n\n### `Metamd.getMarkdown()` ###\n\nReturns the markdown absent of the meta data.\n\n### `Metamd.getHtml()` ###\n\nReturns html rendered using marked.\n\n**NOTE:** Meta data keys should be alphanumneric plus underscores. Nothing else will be parsed. Also be careful not to use reserved words or `_body` as keys.\n\n\nTest\n----\n\nTesting is done with mocha and chai and can be run on the server or client. Remember to install the dev dependencies before running the tests.\n\n### Node ###\n\n\tnpm test\n\n### Client ###\n\nNavigate to `test/browser/index.html`.\n\n\nCompiling\n---------\n\nIf you make changes, you need to recompile for browser usage. After you install the dev dependencies, it's easy:\n\n```\nnpm run compile\n```",
  "readmeFilename": "README.md",
  "_id": "metamd@0.3.0",
  "dist": {
    "shasum": "e3e3826bdbfa1a5e49377dfd1e2d9b604941f755"
  },
  "_from": "metamd@",
  "_resolved": "http://registry.npmjs.org/metamd/-/metamd-0.3.0.tgz"
}
